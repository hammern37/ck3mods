namespace = raiding

##################################################
#Raiding CB events

	#0001-0002	- You have the chance to sack a holding.
	#0003		- Your holding may have been sacked (liege or vassal).
	#0004		- Your vassal's holding may have been sacked.
	#0011		- Raiding notification event, received upon delivering army loot.
	#0012		- Raiding notification event, telling involved parties how much loot a defending army stole.
	#0021		- Increase raid tally.
	#0022		- Chance to fire viking/raider trait acquisition event.
	#0023		- Acquire viking/raider trait.

##################################################

##################################################
# Fire and Blood
# by Ewan Cowhig Croft
# #0001-0004
##################################################

#	You have the chance to sack a holding.
raiding.0001 = {	#Hidden event: do I get a sacking?
	hidden = yes
	type = empty
	scope = army

	trigger = {
		scope:raider = {	#You must be leading your own forces.
			is_at_location = scope:barony.title_province
		}
		scope:barony.title_province = {
			fort_level > 0
		}
		NOT = {
			scope:county = { has_county_modifier = recently_sacked_modifier }	#The county must not have recently been sacked.
		}
	}

	immediate = {

		random = {
			chance = 30
			#chance = 100 #for mod testing
			modifier = {
				add = 20
				scope:raider = { has_trait = viking }
			}

			scope:raider = {
				random_realm_county = {
					limit = {
						development_level < 15
						holder = scope:raider
					}
					save_scope_as = raider_other_title
					save_scope_as = raider_other_vassal_title
					holder = {
						save_scope_as = raider_other_vassal
					}
				}
				random_realm_county = {
					limit = {
						development_level < 15
						NOT = { holder = scope:raider }
					}
					save_scope_as = raider_other_vassal_title
					holder = {
						save_scope_as = raider_other_vassal
					}
				}
			}
			scope:raider_other_title = {
				random_county_province = {
					limit = { fort_level >= 1 }
					save_scope_as = raider_other_title_province
				}
			}
			scope:raider_other_vassal_title = {
				random_county_province = {
					limit = { fort_level >= 1 }
					save_scope_as = raider_other_vassal_title_province
				}
			}
			scope:raider = {
				scope:county = { save_scope_as = sacked_county }	#For loc.
				scope:barony = { save_scope_as = sacked_barony }	#For loc.
				scope:raider.capital_province = { save_scope_as = raider_capital }
				scope:raider.capital_county = { save_scope_as = raider_capital_county  }
			
				trigger_event = raiding.0002
			}
		}
	}
}

raiding.0002 = {	#Less hidden event: I do get a sacking!
	type = character_event
	title = raiding.0002.t
	desc = raiding.0002.desc
	theme = battle
	override_background = {
		event_background = burning_building
	}
	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = scope:sacked_county_owner
		animation = fear
		triggered_animation = {
			trigger = {
				ai_vengefulness >= medium_positive_ai_value
				ai_boldness > high_negative_ai_value
			}
			animation = rage
		}
	}

	immediate = {
		scope:sacked_county.holder = { save_scope_as = sacked_county_owner }	#For loc.
	}

	#Bring me slaves and scrolls!
	#Capital
	option = {
		name = raiding.0002.a1
		trigger = {
			root.capital_county = { development_level < 15 }	#If you have a certain amount of development, you can't gain anything from this.
			OR = {
				scope:county = { development_level > 15 }	#The county must actually have enough development to be worth sacking.
				scope:county.holder = {	#Or at least be a non-tribal place.
					NOT = { has_government = tribal_government }
				}
			}
		}
		scope:sacked_county = {
			add_county_modifier = {	#Prevent the county from being sacked again, by anyone, for quite a while.
				modifier = recently_sacked_modifier
				years = 20
			}
			change_county_control = -10
			change_development_progress = major_development_progress_loss	#Always deduct progress.
			if = {	#If they don't have enough progress made, burn a level of development.
				limit = { development_towards_level_increase < major_development_progress_gain }
				change_development_level = -1
			}
			save_scope_value_as = {
				name = sack_status
				value = flag:admin_plundered
			}
			holder = {
				trigger_event = raiding.0003
				if = {
					limit = { is_independent_ruler = no }
					liege = { trigger_event = raiding.0004 }
				}
			}
		}
		root.capital_county = {
			change_development_progress = medium_development_progress_gain
		}
		stress_impact = {
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = 0.5
				ai_compassion = -0.5
			}
			modifier = {	#Weight down for stress.
				add = -20
				has_trait = compassionate
			}
			modifier = {	#Weight down for stress.
				add = -20
				has_trait = forgiving
			}
		}
	}
	
	# Other land
	option = {
		name = raiding.0002.a2
		trigger = {
			scope:raider_other_title = { development_level < 15 }	#If you have a certain amount of development, you can't gain anything from this.
			OR = {
				scope:county = { development_level > 15 }	#The county must actually have enough development to be worth sacking.
				scope:county.holder = {	#Or at least be a non-tribal place.
					NOT = { has_government = tribal_government }
				}
			}
		}
		scope:sacked_county = {
			add_county_modifier = {	#Prevent the county from being sacked again, by anyone, for quite a while.
				modifier = recently_sacked_modifier
				years = 20
			}
			change_county_control = -10
			change_development_progress = major_development_progress_loss	#Always deduct progress.
			if = {	#If they don't have enough progress made, burn a level of development.
				limit = { development_towards_level_increase < major_development_progress_gain }
				change_development_level = -1
			}
			save_scope_value_as = {
				name = sack_status
				value = flag:admin_plundered
			}
			holder = {
				trigger_event = raiding.0003
				if = {
					limit = { is_independent_ruler = no }
					liege = { trigger_event = raiding.0004 }
				}
			}
		}
		
		scope:raider_other_title = { 
			change_development_progress = medium_development_progress_gain
		}	
		
		stress_impact = {
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = 0.5
				ai_compassion = -0.5
			}
			modifier = {	#Weight down for stress.
				add = -20
				has_trait = compassionate
			}
			modifier = {	#Weight down for stress.
				add = -20
				has_trait = forgiving
			}
		}
	}
	
	# vassal land
	option = {
		name = raiding.0002.a3
		trigger = {
			scope:raider_other_vassal_title = { development_level < 15 }	#If you have a certain amount of development, you can't gain anything from this.
			OR = {
				scope:county = { development_level > 15 }	#The county must actually have enough development to be worth sacking.
				scope:county.holder = {	#Or at least be a non-tribal place.
					NOT = { has_government = tribal_government }
				}
			}
		}
		scope:sacked_county = {
			add_county_modifier = {	#Prevent the county from being sacked again, by anyone, for quite a while.
				modifier = recently_sacked_modifier
				years = 20
			}
			change_county_control = -10
			change_development_progress = major_development_progress_loss	#Always deduct progress.
			if = {	#If they don't have enough progress made, burn a level of development.
				limit = { development_towards_level_increase < major_development_progress_gain }
				change_development_level = -1
			}
			save_scope_value_as = {
				name = sack_status
				value = flag:admin_plundered
			}
			holder = {
				trigger_event = raiding.0003
				if = {
					limit = { is_independent_ruler = no }
					liege = { trigger_event = raiding.0004 }
				}
			}
		}
		
		scope:raider_other_vassal_title = { 
			change_development_progress = medium_development_progress_gain
		}	
		
		stress_impact = {
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = 0.5
				ai_compassion = -0.5
			}
			modifier = {	#Weight down for stress.
				add = -20
				has_trait = compassionate
			}
			modifier = {	#Weight down for stress.
				add = -20
				has_trait = forgiving
			}
		}
	}
	
	#Bring me bounteous plunder!
	option = {
		name = raiding.0002.b
		scope:sacked_county = {
			add_county_modifier = {	#Prevent the county from being sacked again for quite a while.
				modifier = recently_sacked_modifier
				years = 20
			}
			if = {	#If they have enough progress gain to take the hit, then they just lose some progress.
				limit = {
					development_towards_level_increase > medium_development_progress_loss
				}
				change_development_progress = medium_development_progress_loss
			}
			else = {	#If they don't, then they lose the progress, and a level of development is burned away.
				change_development_progress = medium_development_progress_loss
				change_development_level = -1
			}
			save_scope_value_as = {
				name = sack_status
				value = flag:gold_plundered
			}
			holder = {
				if = {
					limit = { is_independent_ruler = yes }
					trigger_event = raiding.0003
				}
				else = {
					trigger_event = raiding.0003
					liege = { trigger_event = raiding.0004 }
				}
			}
		}
		add_gold = scope:sacked_barony.county.title_province.raid_gold_value
		add_prestige = minor_prestige_value
		stress_impact = {
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = 0.75
				ai_compassion = -0.25	#It's more ethical to steal stuff than people, right?
			}
			modifier = {	#Weight down for stress.
				add = -20
				has_trait = compassionate
			}
			modifier = {	#Weight down for stress.
				add = -20
				has_trait = forgiving
			}
		}
	}
	#I want no part of these shenanigans.
	option = {
		name = raiding.0002.c
		scope:sacked_county = {
			#Opinion gain if not primary defender.
			save_scope_value_as = {
				name = sack_status
				value = flag:spared_plundered
			}
			holder = {
				if = {
					limit = { is_independent_ruler = yes }
					trigger_event = raiding.0003
				}
				else = {
					trigger_event = raiding.0003
					liege = { trigger_event = raiding.0004 }
				}
			}
		}
		if = {
			limit = {
				faith = {
					OR = {
						trait_is_sin = compassionate
						trait_is_sin = forgiving
						trait_is_sin = calm
					}
				}
			}
			add_piety = minor_piety_loss
		}
		else = { add_piety = medium_piety_gain }
		stress_impact = {
			sadistic = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_honor = 0.25
				ai_greed = -0.25
			}
			modifier = {	#Weight down for stress.
				add = -20
				has_trait = sadistic
			}
			modifier = {	#Weight down for stress.
				add = -20
				has_trait = vengeful
			}
			modifier = {	#Weight down for stress.
				add = -20
				has_trait = wrathful
			}
		}
	}
}