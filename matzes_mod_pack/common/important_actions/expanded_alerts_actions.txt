action_can_assign_guardian = {
    type = alert

	check_create_action = {
		every_child = {
			limit = {
				is_adult = no
				num_of_relation_guardian = 0
				age >= childhood_education_start_age
				exists = liege
				liege = root
				root = {
					is_character_interaction_valid = {
						recipient = prev
						interaction = educate_child_interaction
					}
				}
			}
			try_create_important_action = {
				important_action_type = action_can_assign_guardian
				actor = root
				recipient = this
				secondary_recipient = this
			}
		}
		
	}

	effect = {
		open_interaction_window = {
			interaction = educate_child_interaction
			actor = scope:actor
			recipient = scope:recipient
			secondary_recipient = scope:secondary_recipient
		}
	}
}

#action_can_lawfully_imprison = {
#	type = alert
#
#	check_create_action = {
#
#		every_vassal_or_below = {
#			try_create_lawfully_imprison = yes
#			every_courtier = {
#				try_create_lawfully_imprison = yes
#			}
#		}		
#	}
#
#	effect = {
#		open_interaction_window = {
#			interaction = imprison_interaction
#			actor = scope:actor
#			recipient = scope:recipient
#		}
#	}
#}

action_can_call_ally = {
    type = alert

	check_create_action = {
		every_ally = {
			save_temporary_scope_as = ally
			if = {
				limit = {
					prev = {
						is_character_interaction_valid = {
							recipient = scope:ally
							interaction = call_ally_interaction
						}
					}
				}
				try_create_important_action = {
					important_action_type = action_can_call_ally
					actor = root
					recipient = scope:ally
				}
			}
		}
	}
	
	effect = {
		open_interaction_window = {
			interaction = call_ally_interaction
			actor = scope:actor
			recipient = scope:recipient
		}
	}
}

action_can_call_house_member = {
    type = alert

	check_create_action = {
		if = {
			limit = {
				is_house_head = yes
			}
			house = {
				every_house_member = {
					save_temporary_scope_as = member
					if = {
						limit = {
							root = {
								is_character_interaction_valid = {
									recipient = scope:member
									interaction = call_house_member_to_war_interaction
								}
							}
						}
						try_create_important_action = {
							important_action_type = action_can_call_house_member
							actor = root
							recipient = scope:member
						}
					}
				}
			}
		}
	}
	
	effect = {
		open_interaction_window = {
			interaction = call_house_member_to_war_interaction
			actor = scope:actor
			recipient = scope:recipient
		}
	}
}

action_can_call_dynasty_member = {
    type = alert

	check_create_action = {
		if = {
			limit = {
				is_dynast = yes
			}
			dynasty = {
				every_dynasty_member = {
					save_temporary_scope_as = member
					if = {
						limit = {
							root = {
								is_character_interaction_valid = {
									recipient = scope:member
									interaction = call_dynasty_member_to_war_interaction
								}
							}
						}
						try_create_important_action = {
							important_action_type = action_can_call_dynasty_member
							actor = root
							recipient = scope:member
						}
					}
				}
			}
		}
	}
	
	effect = {
		open_interaction_window = {
			interaction = call_dynasty_member_to_war_interaction
			actor = scope:actor
			recipient = scope:recipient
		}
	}
}

action_not_enough_knights = {
	type = alert

	check_create_action = {
		if = {
			limit = {
				max_number_of_knights != root.number_of_knights
			}
			try_create_important_action = {
				important_action_type = action_not_enough_knights
				actor = root
			}
		}
	}
	effect = {
		root = {
			open_view = military
			open_view = knights
		}
	}
}

action_take_decision = {
	type = alert

	check_create_action = {
		# already filtered to only important decisions

		try_create_important_action = {
			important_action_type = action_take_decision
		}
	}

	effect = {
		scope:decision_type = {
			open_view_data = decision_detail
		}
	}
}

action_empty_physician_position = { # nice rhyme
	type = alert

	check_create_action = {
		if = {
			limit = {
				has_character_flag = flag_no_physician
			}
			try_create_important_action = {
				important_action_type = action_empty_physician_position
				actor = root
			}
		}
	}
	
	effect = {
		root = {
			open_view = court_window
		}
	}
}

action_truce_expiring = {
	type = alert
	
	check_create_action = {
		every_truce_target = {
			save_temporary_scope_as = truce_target
			if = {
				limit = {
					scope:truce_target = {
						NOT = { has_character_flag = has_truce_flag }
						is_landed = yes
					}
				}
				try_create_important_action = {
					important_action_type = action_truce_expiring
					actor = root
					recipient = scope:truce_target
				}
			}
		}
	}
	
	effect = {
		scope:recipient = {
			open_view_data = {
				view = character
			}
		}
	}
}

#action_truce_expiring_grouped = {
#	type = alert
#	
#	check_create_action = {
#		every_truce_target = {
#			save_temporary_scope_as = truce_target
#			if = {
#				limit = {
#					AND = {
#						scope:truce_target = {
#							NOT = { has_character_flag = has_truce_flag }
#							is_landed = yes
#						}
#						root = {
#							any_truce_target = {
#								has_character_flag = has_truce_flag
#								count >= 5
#							}
#						}
#					}
#				}
#				try_create_important_action = {
#					important_action_type = action_truce_expiring_grouped
#					actor = root
#				}
#			}
#		}
#	}
#	
#	effect = {
#		scope:actor = {
#			open_view_data = {
#				view = diplomacy
#			}
#		}
#	}
#}
