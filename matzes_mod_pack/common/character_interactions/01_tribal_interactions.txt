feudalize_tribal_holding_interaction = {
	category = interaction_category_uncategorized
	hidden = yes
	special_interaction = feudalize_tribal_holding

	desc = feudalize_tribal_holding_interaction_desc

	target_type = title
	target_filter = actor_domain_titles
	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			this = scope:recipient
			NOT = { has_government = tribal_government }
		}
	}
	
	can_be_picked_title = {
		scope:target = {
			holder = scope:actor
			is_capital_barony = no # we'll use the county in that case
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					has_holding_type = tribal_holding
				}
			}
			trigger_else = {
				custom_description = {
					text = "feudalize_tribal_holding_interaction_title_not_county_or_below"
					always = no
				}
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:target = {
			trigger_if = {
				limit = { tier <= tier_county }
				title_province.barony_controller = scope:actor
			}
		}
	}

	cost = {
		gold = {
			value = feudalize_tribal_holding_interaction_cost
		}
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = feudalize_tribal_holding_interaction_notification

				right_icon = scope:actor					

				if = {
					limit = { exists = scope:target.title_province }
					#First, add city/temple holdings to province if applicable
					
					if = {
						limit = {
							scope:target.title_province = {
								has_building_or_higher = tribe_02
							}
						}
						scope:target.title_province = {
							county = { save_scope_as = target_county }
						}
						scope:actor = {
							random_realm_province = {
								limit = {
									county = scope:target_county
									barony = { NOT = { exists = this.holder } }
								}
								create_title_and_vassal_change = change
								scope:change = {
									set_title_and_vassal_change_type = returned
								}
								set_holding_type = city_holding
								barony = {
									change_title_holder = {
										holder = scope:actor
										change = scope:change
									}
								}
								resolve_title_and_vassal_change = scope:change
							}
							random_realm_province = {
								limit = {
									county = scope:target_county
									barony = { NOT = { exists = this.holder } }
								}
								create_title_and_vassal_change = change
								scope:change = {
									set_title_and_vassal_change_type = returned
								}
								set_holding_type = church_holding
								barony = {
									change_title_holder = {
										holder = scope:actor
										change = scope:change
									}
								}
								resolve_title_and_vassal_change = scope:change
							}
						}
					}
					#Then upgrade buildings
					scope:target.title_province = {
						fwb_upgrade_effect = yes
					}
				}
			}
		}
	}
}
