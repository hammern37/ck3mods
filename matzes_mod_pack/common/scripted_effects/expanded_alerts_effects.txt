# TRUCES
# Add attacker truce on victory
add_truce_attacker_victory_effect = {
	hidden_effect = {
		scope:attacker = {
			if = {
				limit = {
					has_perk = flexible_truces_perk
				}
				add_truce_one_way = {
					character = scope:defender
					days = flexible_truces_perk_truce_duration_days
					war = root.war
					result = victory
				}
				if = {
					limit = {
						scope:attacker = { is_ai = no }
					}
					scope:defender = {
						add_character_flag = {
							flag = has_truce_flag
							days = flexible_truces_perk_truce_alert_days
						}
					}
				}
			}
			else = {
				add_truce_one_way = {
					character = scope:defender
					days = standard_truce_duration_days
					war = root.war
					result = victory
				}
				if = {
					limit = {
						scope:attacker = { is_ai = no }
					}
					scope:defender = {
						add_character_flag = {
							flag = has_truce_flag
							days = standard_truce_alert_days
						}
					}
				}
			}
		}
	}
}

# Add white peace truce
add_truce_white_peace_effect = {
	hidden_effect = {
		scope:attacker = {
			if = {
				limit = {
					has_perk = flexible_truces_perk
				}
				add_truce_one_way = {
					character = scope:defender
					days = flexible_truces_perk_truce_duration_days
					war = root.war
					result = white_peace
				}
				if = {
					limit = {
						scope:attacker = { is_ai = no }
					}
					scope:defender = {
						add_character_flag = {
							flag = has_truce_flag
							days = flexible_truces_perk_truce_alert_days
						}
					}
				}
			}
			else = {
				add_truce_one_way = {
					character = scope:defender
					days = standard_truce_duration_days
					war = root.war
					result = white_peace
				}
				if = {
					limit = {
						scope:attacker = { is_ai = no }
					}
					scope:defender = {
						add_character_flag = {
							flag = has_truce_flag
							days = standard_truce_alert_days
						}
					}
				}
			}
		}
	}
}

# Add attacker truce on defeat
add_truce_attacker_defeat_effect = {
	hidden_effect = {
		scope:attacker = {
			if = {
				limit = {
					has_perk = flexible_truces_perk
				}
				add_truce_one_way = {
					character = scope:defender
					days = flexible_truces_perk_truce_duration_days
					war = root.war
					result = defeat
				}
				if = {
					limit = {
						scope:attacker = { is_ai = no }
					}
					scope:defender = {
						add_character_flag = {
							flag = has_truce_flag
							days = flexible_truces_perk_truce_alert_days
						}
					}
				}
			}
			else = {
				add_truce_one_way = {
					character = scope:defender
					days = standard_truce_duration_days
					war = root.war
					result = defeat
				}
				if = {
					limit = {
						scope:attacker = { is_ai = no }
					}
					scope:defender = {
						add_character_flag = {
							flag = has_truce_flag
							days = standard_truce_alert_days
						}
					}
				}
			}
		}
	}
}

# Add GHW truces on attacker victory.
add_truce_GHW_attacker_victory_effect = {
	hidden_effect = {
		scope:attacker.faith.great_holy_war = {
			every_pledged_defender = {
				add_truce_both_ways = {
					character = scope:title_recipient
					days = 3650
					war = root.war
					result = defeat
				}
			}
		}
	}
}

# Major decisions which add truces

unite_burgundies_scripted_effect = {
	add_prestige = medium_prestige_gain
	save_scope_as = scoped_ruler
	liege = { save_scope_as = former_liege }
	#De jure shifts.
	hidden_effect = {
		title:d_burgundy = {
			set_de_jure_liege_title = title:k_burgundy
		}
		title:d_provence = { #Just in case they drifted in the meantime.
			set_de_jure_liege_title = title:k_burgundy
		}
		title:d_savoie = {
			set_de_jure_liege_title = title:k_burgundy
		}
		title:d_dauphine = {
			set_de_jure_liege_title = title:k_burgundy
		}
		title:d_upper_burgundy = {
			set_de_jure_liege_title = title:k_burgundy
		}
	}
	if = {
		limit = {
			culture:occitan = {
				NOT = {
					has_innovation = innovation_guilds
				}
			}
		}
		culture:occitan = {
			add_innovation = innovation_guilds
		}
	}
	if = {
		limit = {
			culture:occitan = {
				NOT = {
					has_innovation = innovation_burhs
				}
			}
		}
		culture:occitan = {
			add_innovation = innovation_burhs
		}
	}
	if = {
		limit = {
			culture:occitan = {
				NOT = {
					has_innovation = innovation_baliffs
				}
			}
		}
		culture:occitan = {
			add_innovation = innovation_baliffs
		}
	}
	#Make ruler independent and give Burgundy to him.
	create_title_and_vassal_change = change
	scope:change = {
		set_title_and_vassal_change_type = independency
	}
	change_liege_or_become_independent = {
		CHANGE = scope:change
		VASSAL = this
	}
	hidden_effect = {
		add_truce_both_ways = {
			character = scope:former_liege
			days = 1825
			name = TRUCE_GRANT_INDEPENDENCE_ROOT
		}
		if = {
			limit = {
				scope:former_liege = { is_ai = no }
			}
			scope:scoped_ruler = {
				add_character_flag = {
					flag = has_truce_flag
					days = standard_truce_alert_days
				}
			}
		}
		if = {
			limit = {
				scope:scoped_ruler = { is_ai = no }
			}
			scope:former_liege = {
				add_character_flag = {
					flag = has_truce_flag
					days = standard_truce_alert_days
				}
			}
		}
	}
	resolve_title_and_vassal_change = scope:change
	create_title_and_vassal_change = new_burgundy
	scope:new_burgundy = {
		set_title_and_vassal_change_type = created
	}
	title:k_burgundy = {
		change_title_holder = {
			holder = root
			change = scope:new_burgundy
		}
	}
	resolve_title_and_vassal_change = scope:new_burgundy
	scope:former_liege = {
		add_prestige = major_prestige_loss
		add_unpressed_claim = title:k_burgundy #Give chance to retaliate
		add_opinion = {
			target = scope:scoped_ruler
			modifier = pretender_opinion
		}
	}
}

create_rum_scripted_effect = {
	add_prestige = medium_prestige_gain
	#If under a liege, make independent.
	if = {
		limit = {
			is_independent_ruler = no
		}
		if = {
			limit = {
				NOT = {
					exists = scope:former_liege
				}
			}
			liege = {
				save_scope_as = former_liege
			}
		}
		create_title_and_vassal_change = change
		scope:change = {
			set_title_and_vassal_change_type = independency
		}
		change_liege_or_become_independent = {
			CHANGE = scope:change
			VASSAL = this
		}
		hidden_effect = {
			add_truce_both_ways = {
				character = scope:former_liege
				days = 1825
				name = TRUCE_GRANT_INDEPENDENCE_ROOT
			}
			if = {
				limit = {
					scope:former_liege = { is_ai = no }
				}
				root = {
					add_character_flag = {
						flag = has_truce_flag
						days = standard_truce_alert_days
					}
				}
			}
			if = {
				limit = {
					root = { is_ai = no }
				}
				scope:former_liege = {
					add_character_flag = {
						flag = has_truce_flag
						days = standard_truce_alert_days
					}
				}
			}
		}
		resolve_title_and_vassal_change = scope:change
	}
	create_title_and_vassal_change = new_rum
	scope:new_rum = {
		set_title_and_vassal_change_type = created
	}
	title:k_rum = {
		change_title_holder = {
			holder = root
			change = scope:new_rum
		}
	}
	resolve_title_and_vassal_change = scope:new_rum
	if = {
		limit = {
			exists = scope:former_liege
		}
		scope:former_liege = {
			add_prestige = major_prestige_loss
			add_unpressed_claim = title:k_rum #Give chance to retaliate
			add_opinion = {
				target = root
				modifier = pretender_opinion
			}
		}
	}
	hidden_effect = { set_primary_title_to = title:k_rum }
}